export declare const isDev: () => boolean;
export declare const getAppPath: () => string;
export declare const getDataPath: () => string;
export declare const getLogsPath: () => string;
export declare const getAssetsPath: () => string;
export declare const formatCurrency: (amount: number, currency?: string) => string;
export declare const formatDate: (date: Date, locale?: string) => string;
export declare const formatDateTime: (date: Date, locale?: string) => string;
export declare const generateBarcode: () => string;
export declare const generateSKU: (category: string, brand: string) => string;
export declare const validateEmail: (email: string) => boolean;
export declare const validatePhone: (phone: string) => boolean;
export declare const sanitizeInput: (input: string) => string;
export declare const calculateTax: (amount: number, taxRate?: number) => number;
export declare const calculateDiscount: (amount: number, discountType: "percentage" | "fixed", discountValue: number) => number;
export declare const debounce: <T extends (...args: any[]) => any>(func: T, wait: number) => ((...args: Parameters<T>) => void);
export declare const throttle: <T extends (...args: any[]) => any>(func: T, limit: number) => ((...args: Parameters<T>) => void);
export declare const deepClone: <T>(obj: T) => T;
export declare const groupBy: <T, K extends keyof T>(array: T[], key: K) => Record<string, T[]>;
export declare const sortBy: <T>(array: T[], key: keyof T, direction?: "asc" | "desc") => T[];
export declare const chunk: <T>(array: T[], size: number) => T[][];
export declare const retry: <T>(fn: () => Promise<T>, maxAttempts?: number, delay?: number) => Promise<T>;
//# sourceMappingURL=utils.d.ts.map